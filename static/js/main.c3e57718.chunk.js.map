{"version":3,"sources":["Nav.js","Square.js","Toggle.js","Stuff.js","Header.js","People.js","Clicked.js","Length.js","Paragraph.js","TempConverter.js","PasswordRename.js","CountThings.js","StepCounter.js","FourOhFour.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","to","Square","props","state","clicked","handleClick","bind","this","setState","color","style","width","height","backgroundColor","onClick","Component","defaultProps","Toggle","initial","alternate","Stuff","square","Header","text","People","console","log","names","map","name","i","key","Clicked","Input","input","handleChange","e","currentTarget","value","label","onChange","length","Paragraph","TempConverter","React","useState","f","c","temp","updateTemp","id","type","ev","target","toFixed","PasswordStrength","colour","colourChange","CountThings","counter","handleClickAdd","handleClickSubtract","max","StepCounter","step","FourOhFour","Home","App","path","exact","component","Length","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"sPAgDeA,MA7Cf,WAEI,OACI,6BACI,4CACI,wBAAIC,UAAU,aACV,kBAAC,IAAD,CAAMC,GAAG,YACT,wBAAID,UAAU,aAAd,YAEA,kBAAC,IAAD,CAAMC,GAAG,gBACT,wBAAID,UAAU,aAAd,iBAEA,kBAAC,IAAD,CAAMC,GAAG,WACT,wBAAID,UAAU,aAAd,WAEA,kBAAC,IAAD,CAAMC,GAAG,WACT,wBAAID,UAAU,aAAd,WAEA,kBAAC,IAAD,KACA,wBAAIA,UAAU,aAAd,SAEA,kBAAC,IAAD,CAAMC,GAAG,cACT,wBAAID,UAAU,aAAd,cAEA,kBAAC,IAAD,CAAMC,GAAG,qBACT,wBAAID,UAAU,aAAd,oBAEA,kBAAC,IAAD,CAAMC,GAAG,cACT,wBAAID,UAAU,aAAd,WAEA,kBAAC,IAAD,KACA,wBAAIA,UAAU,aAAd,WAEA,kBAAC,IAAD,KACA,wBAAIA,UAAU,aAAd,iBAEA,kBAAC,IAAD,CAAMC,GAAG,kBACT,wBAAID,UAAU,aAAd,sB,0CCrCdE,E,YAEF,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CAAEC,SAAS,GAExB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBALF,E,2EAQfC,KAAKC,SAAS,CAAEJ,SAASG,KAAKJ,MAAMC,Y,+BAG9B,IAEHA,EAAWG,KAAKJ,MAAhBC,QACAK,EAASF,KAAKL,MAAdO,MAECC,EAAQ,CACZC,MAAO,QACPC,OAAQ,QACRC,gBAAiBT,EAAUK,EAAQ,WAGrC,OACE,yBAAKK,QAAUP,KAAKF,YAAcK,MAAUA,Q,GAzB/BK,aA8BjBd,EAAOe,aAAe,CACpBP,MAAO,WAGER,QCNAgB,E,YA3BX,WAAYf,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CAAEC,SAAS,GAExB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBALJ,E,2EASfC,KAAKC,SAAS,CAAEJ,SAASG,KAAKJ,MAAMC,Y,+BAG9B,IAEAA,EAAYG,KAAKJ,MAAjBC,QACAc,EAAYX,KAAKL,MAAjBgB,QACAC,EAAcZ,KAAKL,MAAnBiB,UAEN,OACI,oCACA,4BAAQL,QAAUP,KAAKF,aAAvB,YACA,+BAAMD,EAAUc,EAAUC,Q,GAvBjBJ,aCUFK,EANP,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACR,oCACCA,EAAS,kBAAC,EAAD,CAAQZ,MAAQ,UAAa,KACvC,kBAAC,EAAD,CAAQS,QAAQ,QAAQC,UAAU,YCCnBG,E,iLAJP,OAAO,4BAAMf,KAAKL,MAAMqB,U,GAHfR,aCwBNS,E,sLAtBPC,QAAQC,IAAI,iB,+BAGN,IAEAC,EAAUpB,KAAKL,MAAfyB,MAEN,OACIA,EACK,wBAAIb,QAAUP,KAAKF,aAEhBsB,EAAMC,KAAI,SAACC,EAAMC,GAAP,OACN,wBAAIC,IAAKD,GAAT,IAAcD,EAAd,SAKR,uD,GApBKd,aC0BNiB,E,YAxBX,WAAY9B,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CAAEC,SAAS,GAExB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBALJ,E,2EASfC,KAAKC,SAAS,CAAEJ,SAASG,KAAKJ,MAAMC,Y,+BAG9B,IAEAA,EAAYG,KAAKJ,MAAjBC,QAEN,OACQ,uBAAGU,QAAUP,KAAKF,aAChBD,EAAU,UAAY,mB,GApBlBW,aCgCPkB,E,YA/Bb,WAAY/B,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CAAE+B,MAAO,cACtB,EAAKC,aAAe,EAAKA,aAAa7B,KAAlB,gBAJH,E,0EAON8B,GAGX7B,KAAKC,SAAS,CAAE0B,MAAOE,EAAEC,cAAcC,U,+BAIvC,OACE,yBAAKvC,UAAU,cACb,+BAASQ,KAAKL,MAAMqC,OAEpB,2BACAC,SAAWjC,KAAK4B,aAChBG,MAAQ/B,KAAKJ,MAAM+B,MACnBL,KAAOtB,KAAKL,MAAM2B,KAClB9B,UAAU,iBAGV,uBAAGA,UAAU,wBAAb,WACYQ,KAAKJ,MAAM+B,MAAMO,OAD7B,oB,GA1BY1B,aCYL2B,E,iLAVL,IACAnB,EAAShB,KAAKL,MAAdqB,KACN,OACI,gCACA,2BAAKA,Q,GANWR,a,QCiCP4B,MAjCjB,WAA2B,IAAD,EACKC,IAAMC,SAAS,CAAEC,EAAG,EAAGC,EAAG,IAD/B,mBACfC,EADe,KACTC,EADS,KAYtB,OACE,yBAAKC,GAAG,aACN,yBAAKA,GAAG,QACN,uCACA,2BACIC,KAAO,SACPb,MAASU,EAAKD,EACdP,SAhBM,SAAAY,GAAE,OAAIH,EAAW,CAC/BF,EAAGK,EAAGC,OAAOf,MACbQ,GAAuB,GAAlBM,EAAGC,OAAOf,MAAY,EAAI,IAAIgB,QAAQ,SAiBzC,yBAAKJ,GAAG,QACJ,0CACA,2BACEC,KAAO,SACPb,MAASU,EAAKF,EACdN,SAnBM,SAAAY,GAAE,OAAIH,EAAW,CAC/BF,GAA8B,IAAxBK,EAAGC,OAAOf,MAAQ,IAAU,GAAGgB,QAAQ,GAC7CR,EAAGM,EAAGC,OAAOf,cCiDJiB,E,YAzDX,WAAYrD,GAAQ,IAAD,8BACnB,4CAAMA,KAEDC,MAAQ,CAAE+B,MAAO,IACtB,EAAKC,aAAe,EAAKA,aAAa7B,KAAlB,gBAJD,E,0EAOR8B,GAGX7B,KAAKC,SAAS,CAAE0B,MAAOE,EAAEC,cAAcC,U,qCAOvC,OAAI/B,KAAKJ,MAAM+B,MAAMO,OAAS,EACrB,MACElC,KAAKJ,MAAM+B,MAAMO,OAAS,GAC5B,SAEA,U,+BAOT,IAAIe,EAASjD,KAAKkD,eAElB,OAEE,yBAAK1D,UAAU,cAEX,+BAASQ,KAAKL,MAAMqC,OAIxB,2BACIC,SAAWjC,KAAK4B,aAChBG,MAAQ/B,KAAKJ,MAAM+B,MACnBL,KAAOtB,KAAKL,MAAM2B,KAClB9B,UAAU,iBAGd,uBAAGA,UAAU,uBAAuBW,MAAS,CAAEG,gBAAiBN,KAAKJ,MAAM+B,MAAMO,OAASe,EAAS,UAAnG,aACcjD,KAAKJ,MAAM+B,MAAMO,OAD/B,oB,GAhDyB1B,aCqChB2C,G,wBArCX,WAAYxD,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTwD,QAAS,EAAKzD,MAAMgB,SAExB,EAAK0C,eAAiB,EAAKA,eAAetD,KAApB,gBACtB,EAAKuD,oBAAsB,EAAKA,oBAAoBvD,KAAzB,gBANZ,E,8EAWXC,KAAKJ,MAAMwD,QAAUpD,KAAKL,MAAM4D,KAChCvD,KAAKC,SAAS,CACVmD,QAASpD,KAAKJ,MAAMwD,QAAU,M,4CAKlCpD,KAAKJ,MAAMwD,QAAU,GACrBpD,KAAKC,SAAS,CACVmD,QAASpD,KAAKJ,MAAMwD,QAAU,M,+BAIhC,IACEA,EAAYpD,KAAKJ,MAAjBwD,QACR,OACI,oCACA,4BAAQ7C,QAAUP,KAAKqD,gBAAvB,OACA,4BAAQ9C,QAAUP,KAAKsD,qBAAvB,OACA,2BACKF,Q,GAhCS5C,cCyCXgD,E,YAtCX,WAAY7D,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTwD,QAAS,GAEb,EAAKC,eAAiB,EAAKA,eAAetD,KAApB,gBACtB,EAAKuD,oBAAsB,EAAKA,oBAAoBvD,KAAzB,gBANZ,E,8EAWXC,KAAKJ,MAAMwD,QAAUpD,KAAKL,MAAM4D,KAChCvD,KAAKC,SAAS,CACVmD,QAASpD,KAAKJ,MAAMwD,QAAUpD,KAAKL,MAAM8D,S,4CAK7CzD,KAAKJ,MAAMwD,QAAU,GACrBpD,KAAKC,SAAS,CACVmD,QAASpD,KAAKJ,MAAMwD,QAAUpD,KAAKL,MAAM8D,S,+BAI3C,IACEL,EAAYpD,KAAKJ,MAAjBwD,QAER,OACI,oCACA,4BAAQ7C,QAAUP,KAAKqD,gBAAvB,OACA,4BAAQ9C,QAAUP,KAAKsD,qBAAvB,OACA,2BACMF,Q,GAlCQ5C,aCEXkD,EAFI,kBAAM,8CCwDvB,IAAMC,EAAO,kBACX,6BACE,4DAKSC,EA5Cf,WACE,OACA,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,gBACV,kBAAC,EAAD,CAAaN,IAAM,IAAME,KAAO,EAAIK,OAAK,EAACC,UAAWP,KAEvD,kBAAC,IAAD,CAAOK,KAAK,cACV,kBAAC,EAAD,CAAW7C,KAAK,oXAAoX8C,OAAK,EAACC,UAAW5B,KAEvZ,kBAAC,IAAD,CAAO0B,KAAK,WACV,kBAAC,EAAD,CAAQ7C,KAAK,cAAc8C,OAAK,EAACC,UAAWhD,KAE9C,kBAAC,IAAD,CAAO8C,KAAK,gBACV,kBAAC,EAAD,CAAalD,QAAU,GAAK4C,IAAM,OAEpC,kBAAC,IAAD,CAAOM,KAAK,iBAAiBC,OAAK,EAACC,UAAW3B,IAC9C,kBAAC,IAAD,CAAOyB,KAAK,IAAIC,OAAK,EAACC,UAAWJ,IACjC,kBAAC,IAAD,CAAOE,KAAK,UAAUC,OAAK,EAACC,UAAWC,IACvC,kBAAC,IAAD,CAAOH,KAAK,UAAUC,OAAK,EAACC,UAAW9C,IACvC,kBAAC,IAAD,CAAO4C,KAAK,cACV,kBAAC,EAAD,CAAQzC,MAAS,CAAC,oBAAqB,gBAAiB,MAAO,gBAAiB,MAAO,aAEzF,kBAAC,IAAD,CAAOyC,KAAK,WAAWC,OAAK,EAACC,UAAWtC,IACxC,kBAAC,IAAD,CAAOoC,KAAK,OAAOC,OAAK,GACtB,kBAAC,EAAD,CAAOhD,QAAU,KAEnB,kBAAC,IAAD,CAAO+C,KAAK,oBAAoBC,OAAK,EAACC,UAAWf,IACjD,kBAAC,EAAD,CAAYa,KAAK,OAAOE,UAAWL,IACnC,kBAAC,EAAD,SCvCcO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/D,QAAQ+D,MAAMA,EAAMC,c","file":"static/js/main.c3e57718.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom'; \n\nfunction Nav() {\n \n    return (\n        <nav>\n            <h2>My first App</h2>\n                <ul className=\"nav-links\" >\n                    <Link to=\"/clicked\">\n                    <li className=\"nav-links\">Clicked</li>\n                    </Link>\n                    <Link to=\"/CountThings\">\n                    <li className=\"nav-links\">Count Things</li>\n                    </Link>\n                    <Link to=\"/Header\">\n                    <li className=\"nav-links\">Header</li>\n                    </Link>\n                    <Link to=\"/length\">\n                    <li className=\"nav-links\">Length</li>\n                    </Link>\n                    <Link>\n                    <li className=\"nav-links\">List</li>\n                    </Link>\n                    <Link to=\"/Paragraph\">\n                    <li className=\"nav-links\">Paragraph</li>\n                    </Link>\n                    <Link to=\"/PasswordStrength\"> \n                    <li className=\"nav-links\">Password Rename</li>\n                    </Link>\n                    <Link to=\"/allpeople\">\n                    <li className=\"nav-links\">People</li>\n                    </Link>\n                    <Link>\n                    <li className=\"nav-links\">Square</li>\n                    </Link>\n                    <Link>\n                    <li className=\"nav-links\">Step Counter</li>\n                    </Link>\n                    <Link to=\"/TempConverter\">\n                    <li className=\"nav-links\">Temp Converter</li>\n                    </Link> \n                </ul>\n        </nav> \n    )\n};\n\n\nexport default Nav; \n \n","\nimport React, { Component } from \"react\";\n\nclass Square extends Component {\n\n    constructor(props) {\n      super(props);\n\n      this.state = { clicked: false}; \n\n      this.handleClick = this.handleClick.bind(this); \n    }\n    handleClick() {\n        this.setState({ clicked:!this.state.clicked })\n    }\n\n    render() {\n\n      let {clicked} = this.state; \n      let {color} = this.props; \n\n      const style = { \n        width: '200px',\n        height: '200px',\n        backgroundColor: clicked ? color : \"hotpink\"\n      };           \n      \n      return ( \n        <div onClick={ this.handleClick } style = { style }></div>\n        ); \n    }\n  }\n\n    Square.defaultProps = {\n      color: 'hotpink',\n    }\n  \nexport default Square;\n","import React, { Component } from \"react\";\n\nclass Toggle extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = { clicked: false}; \n\n        this.handleClick = this.handleClick.bind(this); \n    }\n\n    handleClick() {\n        this.setState({ clicked:!this.state.clicked })\n    }\n    \n    render() {\n\n        let { clicked } = this.state; \n        let { initial } = this.props; \n        let { alternate } = this.props; \n            \n        return ( \n            <>\n            <button onClick={ this.handleClick }> Toggle </button>\n            <p> { clicked ? initial : alternate }</p>\n            </>\n        );  \n    }\n}\n\nexport default Toggle;","import React, { Children } from \"react\";\nimport Square from \"./Square\"; \nimport Toggle from \"./Toggle\"; \n// import List from \"./List\";\n// import CatchMeIfYouCan from \"./CatchMeIfYouCan\"; \n\nlet Stuff = ( {square} ) => (\n    <>\n    {square ? <Square color = \"green\" /> : null}\n    <Toggle initial=\"Hello\" alternate=\"World\" />\n    </>\n);\n    export default Stuff;\n\n","\nimport React, { Component } from \"react\";\n\nclass Header extends Component {\n\n    render() {\n            return <h1>{ this.props.text }</h1>; \n        }\n    }\n\n    export default Header;\n","import React, { Component } from \"react\";\n\nclass People extends Component {\n    \n    handleClick() {\n        console.log(\"Hello World\"); \n    }\n\n    render() {\n\n        let { names } = this.props; \n            \n        return (\n            names ? \n                (<ul onClick={ this.handleClick }>\n                {\n                    names.map((name, i) => (\n                        <li key={i}> {name} </li>\n                    ))\n                }\n                </ul>) \n                : \n                <p>Nothing to see here!</p> \n        )\n    }\n}\n\nexport default People;","import React, { Component } from \"react\";\n\nclass Clicked extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = { clicked: false}; \n\n        this.handleClick = this.handleClick.bind(this); \n    }\n\n    handleClick() {\n        this.setState({ clicked:!this.state.clicked })\n    }\n    \n    render() {\n\n        let { clicked } = this.state; \n            \n        return ( \n                <p onClick={ this.handleClick }>\n                { clicked ? \"clicked\" : \"non clicked\"}\n                </p>\n        );  \n    }\n}\n\nexport default Clicked;","import React, { Component } from \"react\";\n\nclass Input extends Component {\n  constructor(props) {\n    super(props);\n    // add the value of the input to the state\n    this.state = { input: \"Test Value\" };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    // e.currentTarget: DOM element we attached the event handler to\n    // use the value property to read its current value\n    this.setState({ input: e.currentTarget.value });\n}\n\n  render() {\n    return (\n      <div className=\"form-group\">\n        <label>{ this.props.label }</label>\n        { /* use the value of the state */ }\n        <input\n        onChange={ this.handleChange }\n        value={ this.state.input }\n        name={ this.props.name }\n        className=\"form-control\"\n        />\n\n        <p className=\"form-text text-muted\">\n          Length: { this.state.input.length } characters\n        </p>\n    </div> );\n    } \n}\nexport default Input;","import React, { Component } from \"react\";\n\nclass Paragraph extends Component {\n\nrender() {\n    let { text } = this.props;\n    return (\n        <header>\n        <p>{ text }</p>\n        </header>\n        );\n    }\n}\n\nexport default Paragraph;\n\n","import React, { Component } from \"react\";\n\nfunction TempConverter () {\n    const [temp, updateTemp] = React.useState({ f: 0, c: 0 })\n  \n    const updateC = ev => updateTemp({\n      c: ev.target.value,\n      f: (+ev.target.value * 9 / 5 + 32).toFixed(2)\n    })\n    \n    const updateF = ev => updateTemp({\n      c: ((+ev.target.value - 32) * 5 / 9).toFixed(2),\n      f: ev.target.value\n    })\n    return(\n      <div id=\"container\">\n        <div id=\"box1\">\n          <h1>Celsius</h1>\n          <input\n              type = \"number\"\n              value = {temp.c}\n              onChange = {updateC} >\n            </input>\n        </div>\n        <div id=\"box2\">\n            <h1>Fahrenheit</h1>\n            <input\n              type = \"number\" \n              value = {temp.f} \n              onChange = {updateF}>\n            </input>\n            </div>\n      </div>\n    )\n  }\n  export default TempConverter; ","import React, { Component } from \"react\";\n\nclass PasswordStrength extends Component {\n  \n    constructor(props) {\n    super(props);\n    // add the value of the input to the state\n    this.state = { input: \"\" };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    // e.currentTarget: DOM element we attached the event handler to\n    // use the value property to read its current value\n    this.setState({ input: e.currentTarget.value });\n}\n\n// here we're defining colourChange \n\n  colourChange() {\n\n    if (this.state.input.length < 9) { \n      return 'red' \n    } else if (this.state.input.length < 16) { \n      return 'orange' \n    } \n      return 'green' \n  }\n\n  render() {\n\n    // everytime the text alters it re-renders and the colourChange function is called and run \n    \n    let colour = this.colourChange() \n\n    return (\n            \n      <div className=\"form-group\">\n\n          <label>{ this.props.label }</label>\n          \n          { /* use the value of the state */ }\n        \n      <input\n          onChange={ this.handleChange }\n          value={ this.state.input }\n          name={ this.props.name }\n          className=\"form-control\"\n      />\n\n      <p className=\"form-text text-muted\" style = {{ backgroundColor: this.state.input.length ? colour : 'white' }} >\n        Password: { this.state.input.length } characters\n      </p>\n          \n      </div> \n    \n    \n    ); \n  }; \n};\n\nexport default PasswordStrength;","import React, { Component } from \"react\";\nclass CountThings extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            counter: this.props.initial\n            };\n        this.handleClickAdd = this.handleClickAdd.bind(this);\n        this.handleClickSubtract = this.handleClickSubtract.bind(this);\n    };\n    // In here we are setting up the response from an event.\n    // The set state is altered every time we click on the button.\n    handleClickAdd() {\n        if (this.state.counter < this.props.max) { \n            this.setState({ \n                counter: this.state.counter + 1 \n            })\n        } \n    };\n    handleClickSubtract() {\n        if (this.state.counter > 0) { \n            this.setState({ \n                counter: this.state.counter - 1 \n            })\n        }\n    };\n    render() {\n        const { counter } = this.state;\n        return (\n            <>\n            <button onClick={ this.handleClickAdd }> + </button>\n            <button onClick={ this.handleClickSubtract }> - </button>\n            <p> \n                {counter}\n            </p>  \n            </> \n            );\n    }; // End of render ()\n};\nexport default CountThings;","import React, { Component } from \"react\";\n\nclass StepCounter extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = { \n            counter: 0\n            };\n        this.handleClickAdd = this.handleClickAdd.bind(this);\n        this.handleClickSubtract = this.handleClickSubtract.bind(this);\n    };\n    // In here we are setting up the response from an event.\n    // The set state is altered every time we click on the button.\n    handleClickAdd() {\n        if (this.state.counter < this.props.max) { \n            this.setState({ \n                counter: this.state.counter + this.props.step\n            })\n        } \n    };\n    handleClickSubtract() {\n        if (this.state.counter > 0) { \n            this.setState({ \n                counter: this.state.counter - this.props.step\n            })\n        }\n    };\n    render() {\n        const { counter } = this.state;\n        \n        return (\n            <>\n            <button onClick={ this.handleClickAdd }> + </button>\n            <button onClick={ this.handleClickSubtract }> - </button>\n            <p> \n                { counter }\n            </p>  \n            </> \n            );\n    }; // End of render ()\n};\nexport default StepCounter;","import React, { Component } from \"react\";\n\nconst FourOhFour = () => <p>Page not found</p>;\n\nexport default FourOhFour;\n\n\n","import {HashRouter as Router, Switch, Route} from 'react-router-dom'; \n\nimport React from \"react\";\nimport Nav from \"./Nav\"; \nimport Stuff from \"./Stuff\";\nimport Header from \"./Header\";\nimport People from \"./People\"; \nimport Clicked from \"./Clicked\";\nimport Length from \"./Length\"; \nimport Paragraph from \"./Paragraph\";\nimport TempConverter from \"./TempConverter\";\nimport PasswordStrength from \"./PasswordRename\"; \nimport \"./App.css\"; \nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport CountThings from \"./CountThings\";\nimport StepCounter from \"./StepCounter\";\nimport FourOhFour from './FourOhFour';\n\n\n// create our component: just a function that returns JSX\n\nfunction App() {  \n  return (\n  <Router>\n    <Nav /> \n    <Switch>\n      <Route path=\"/StepCounter\">\n        <StepCounter max={ 100 } step={ 5 } exact component={StepCounter} />\n      </Route>\n      <Route path=\"/Paragraph\">\n        <Paragraph text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quamquam tu hanc copiosiorem etiam soles dicere. Ubi ut eam caperet aut quando? Videmus igitur ut conquiescere ne infantes quidem possint. Magna laus. Bonum patria: miserum exilium. Sed tu istuc dixti bene Latine, parum plane. Duo Reges: constructio interrete. Ergo hoc quidem apparet, nos ad agendum esse natos.\" exact component={Paragraph}/>\n      </Route> \n      <Route path=\"/header\">\n        <Header text=\"Hello Props\" exact component={Header} />\n      </Route> \n      <Route path=\"/CountThings\">\n        <CountThings initial={ 50 } max={ 100 } />\n      </Route>\n      <Route path=\"/TempConverter\" exact component={TempConverter}/>\n      <Route path=\"/\" exact component={Home} /> \n      <Route path=\"/length\" exact component={Length} /> \n      <Route path=\"/people\" exact component={People} />\n      <Route path=\"/allpeople\">\n        <People names = {[\"James P. Sullivan\", \"Mike Wazowski\", \"Boo\", \"Randall Boggs\", \"Roz\", \"Fungus\"]}/>\n      </Route>\n      <Route path=\"/clicked\" exact component={Clicked} />\n      <Route path=\"/all\" exact >\n        <Stuff square = {true}/>\n      </Route>\n      <Route path=\"/PasswordStrength\" exact component={PasswordStrength} />\n      <FourOhFour path=\"/404\" component={FourOhFour}/>\n      <FourOhFour />\n\n    </Switch>\n  </Router>\n  );  \n  }\n\n  const Home = () => (\n    <div>\n      <h1>My first homepage on React</h1>\n    </div>\n  ); \n\n// export our component\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}